From d9093f083aa4635c530ff58e2620a02f31779235 Mon Sep 17 00:00:00 2001
From: Joakim Haugen <joakim.haugen@sintef.no>
Date: Mon, 10 Apr 2023 20:33:05 +0200
Subject: [PATCH 2/2] List append CMAKE_MODULE_PATH and more

---
 CMake/Dependencies.cmake              | 45 +++++++++++++++------------
 CMakeLists.txt                        |  2 +-
 Components/Overlay/CMakeLists.txt     |  4 +--
 PlugIns/FreeImageCodec/CMakeLists.txt |  7 +++--
 PlugIns/GLSLang/CMakeLists.txt        |  4 +--
 Tests/CMakeLists.txt                  |  2 +-
 Tools/AssimpConverter/CMakeLists.txt  |  3 --
 7 files changed, 35 insertions(+), 32 deletions(-)

diff --git a/CMake/Dependencies.cmake b/CMake/Dependencies.cmake
index dae35eba6..92ce4fe38 100644
--- a/CMake/Dependencies.cmake
+++ b/CMake/Dependencies.cmake
@@ -197,20 +197,22 @@ endif()
 #######################################################################
 
 # Find FreeImage
-find_package(freeimage MODULE QUIET)
-macro_log_feature(freeimage_FOUND "freeimage" "Support for commonly used graphics image formats" "http://freeimage.sourceforge.net")
+find_package(freeimage QUIET)
+if(TARGET freeimage::freeimage)
+  macro_log_feature(freeimage_FOUND "freeimage" "Support for commonly used graphics image formats" "http://freeimage.sourceforge.net")
+endif()
 
 # Find FreeType
-find_package(Freetype)
 if(OGRE_WITH_FREETYPE)
-  find_package(Freetype MODULE QUIET)
-  set(FREETYPE_FOUND ${Freetype_FOUND})
-  set(FREETYPE_INCLUDE_DIRS ${Freetype_INCLUDE_DIRS})
-  set(FREETYPE_LIBRARIES ${Freetype_LIBRARIES})
-  macro_log_feature(FREETYPE_FOUND "freetype" "Portable font engine" "http://www.freetype.org")
+  find_package(Freetype REQUIRED)
+  set(FREETYPE_FOUND TRUE)
+  #set(FREETYPE_INCLUDE_DIRS ${Freetype_INCLUDE_DIRS})
+  #set(FREETYPE_LIBRARIES ${Freetype_LIBRARIES})
+  # TODO: add correct target name to Components/Overlay/CMakeLists.txt
 else()
   set(FREETYPE_FOUND OFF)
 endif()
+macro_log_feature(FREETYPE_FOUND "freetype" "Portable font engine" "http://www.freetype.org")
 
 # Find X11
 if (UNIX AND NOT APPLE AND NOT ANDROID AND NOT EMSCRIPTEN)
@@ -261,18 +263,21 @@ if (NOT (APPLE_IOS OR WINDOWS_STORE OR WINDOWS_PHONE OR ANDROID OR EMSCRIPTEN))
   macro_log_feature(Cg_FOUND "cg" "C for graphics shader language" "http://developer.nvidia.com/object/cg_toolkit.html")
 endif ()
 
-find_package(glslang MODULE QUIET)
-find_package(spirv-tools MODULE QUIET)
-find_package(Vulkan MODULE QUIET)
-find_package(VulkanHeaders MODULE QUIET)
+find_package(SPIRV-Tools)
+find_package(glslang)
+find_package(Vulkan)
+find_package(VulkanHeaders)
 
 # Find Vulkan SDK
 macro_log_feature(Vulkan_FOUND "Vulkan SDK" "Vulkan RenderSystem, glslang Plugin. Alternatively use system packages" "https://vulkan.lunarg.com/")
 
 # OpenEXR
 find_package(OpenEXR)
+if(TARGET openexr::openexr)
+  set(OPENEXR_FOUND ON)
+endif()
 macro_log_feature(OPENEXR_FOUND "OpenEXR" "Load High dynamic range images" "http://www.openexr.com/")
-set(OPENEXR_LIBRARIES OpenEXR::OpenEXR)
+set(OPENEXR_LIBRARIES openexr::openexr)
 
 # Python
 set(Python_ADDITIONAL_VERSIONS 3.4) # allows using python3 on Ubuntu 14.04
@@ -281,23 +286,23 @@ find_package(PythonLibs)
 macro_log_feature(PYTHONLIBS_FOUND "Python" "Language bindings to use OGRE from Python" "http://www.python.org/")
 
 # SWIG
-find_package(SWIG QUIET)
+find_package(SWIG)
 macro_log_feature(SWIG_FOUND "SWIG" "Language bindings (Python, Java, C#) for OGRE" "http://www.swig.org/")
 
 # pugixml
-find_package(pugixml MODULE QUIET)
+find_package(pugixml)
 macro_log_feature(pugixml_FOUND "pugixml" "Needed for XMLConverter and DotScene Plugin" "https://pugixml.org/")
 
 # Find zlib
-find_package(ZLIB MODULE QUIET)
+find_package(ZLIB)
 macro_log_feature(ZLIB_FOUND "zlib" "Simple data compression library" "http://www.zlib.net")
 
 # Assimp
-find_package(assimp MODULE QUIET)
+find_package(assimp)
 macro_log_feature(assimp_FOUND "Assimp" "Needed for the AssimpLoader Plugin" "https://www.assimp.org/")
 
 # Bullet
-find_package(Bullet MODULE QUIET)
+find_package(Bullet)
 macro_log_feature(BULLET_FOUND "Bullet" "Bullet physics" "https://pybullet.org")
 
 
@@ -310,7 +315,7 @@ macro_log_feature(BULLET_FOUND "Bullet" "Bullet physics" "https://pybullet.org")
 if(NOT ANDROID AND NOT EMSCRIPTEN)
   # find script does not work in cross compilation environment
   if(OGRE_WITH_SDL)
-    find_package(SDL2 MODULE QUIET)
+    find_package(SDL2)
     macro_log_feature(SDL2_FOUND "SDL2" "Simple DirectMedia Library needed for input handling in samples" "https://www.libsdl.org/")
     if(SDL2_FOUND AND NOT TARGET SDL2::SDL2)
       add_library(SDL2::SDL2 INTERFACE IMPORTED)
@@ -324,7 +329,7 @@ if(NOT ANDROID AND NOT EMSCRIPTEN)
   endif()
 
   if(OGRE_WITH_QT)
-    find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core Gui QUIET)
+    find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core Gui)
     set(QT_FOUND ON)
   else()
     set(QT_FOUND OFF)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 95f4faf4b..6ac311409 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -82,7 +82,7 @@ set(OGRE_VERSION_DASH_SEPARATED "${OGRE_VERSION_MAJOR}-${OGRE_VERSION_MINOR}-${O
 
 
 # Include necessary submodules
-set(CMAKE_MODULE_PATH
+list(APPEND CMAKE_MODULE_PATH
   "${PROJECT_SOURCE_DIR}/CMake"
   "${PROJECT_SOURCE_DIR}/CMake/Utils"
   "${PROJECT_SOURCE_DIR}/CMake/Packages"
diff --git a/Components/Overlay/CMakeLists.txt b/Components/Overlay/CMakeLists.txt
index d42f30f18..2a05228f1 100644
--- a/Components/Overlay/CMakeLists.txt
+++ b/Components/Overlay/CMakeLists.txt
@@ -52,8 +52,8 @@ target_include_directories(OgreOverlay PUBLIC
 
 if(FREETYPE_FOUND)
   target_compile_definitions(OgreOverlay PRIVATE HAVE_FREETYPE)
-  target_link_libraries(OgreOverlay PRIVATE ${FREETYPE_LIBRARIES})
-  target_include_directories(OgreOverlay PRIVATE ${FREETYPE_INCLUDE_DIRS})
+  target_link_libraries(OgreOverlay PRIVATE Freetype::Freetype)#${FREETYPE_LIBRARIES})
+  #target_include_directories(OgreOverlay PRIVATE ${FREETYPE_INCLUDE_DIRS})
   if(ZLIB_FOUND)
     target_link_libraries(OgreOverlay PRIVATE ZLIB::ZLIB)
   endif()
diff --git a/PlugIns/FreeImageCodec/CMakeLists.txt b/PlugIns/FreeImageCodec/CMakeLists.txt
index 8fa076b29..aad4d2c39 100644
--- a/PlugIns/FreeImageCodec/CMakeLists.txt
+++ b/PlugIns/FreeImageCodec/CMakeLists.txt
@@ -13,11 +13,12 @@ set(SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/OgreFreeImageCodec.cpp")
 
 add_definitions(-DFREEIMAGE_LIB)
 add_library(Codec_FreeImage ${OGRE_LIB_TYPE} ${HEADER_FILES} ${SOURCES})
-target_link_libraries(Codec_FreeImage PUBLIC OgreMain freeimage::freeimage)
+target_link_libraries(Codec_FreeImage PUBLIC OgreMain
+PRIVATE freeimage::freeimage)
 target_include_directories(Codec_FreeImage PUBLIC
     "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
-    $<INSTALL_INTERFACE:include/OGRE/Plugins/FreeImageCodec>
-    PRIVATE "${freeimage_INCLUDE_DIR}")
+    $<INSTALL_INTERFACE:include/OGRE/Plugins/FreeImageCodec>)
+    #PRIVATE "${freeimage_INCLUDE_DIR}")
 
 if (MINGW)
   # may need winsock htons functions for FreeImage
diff --git a/PlugIns/GLSLang/CMakeLists.txt b/PlugIns/GLSLang/CMakeLists.txt
index 892180433..8e0db49ea 100644
--- a/PlugIns/GLSLang/CMakeLists.txt
+++ b/PlugIns/GLSLang/CMakeLists.txt
@@ -18,11 +18,11 @@ elseif(WIN32)
     endif()
     target_link_libraries(Plugin_GLSLangProgramManager PUBLIC
       OgreMain
-      glslang::glslang glslang::HLSL glslang::OSDependent glslang::OGLCompiler glslang::SPIRV spirv-tools::SPIRV-Tools spirv-tools::SPIRV-Tools-opt)
+      glslang::glslang glslang::HLSL glslang::OSDependent glslang::OGLCompiler glslang::SPIRV SPIRV-Tools-static SPIRV-Tools-opt)
 else()
     target_link_libraries(Plugin_GLSLangProgramManager PUBLIC
       OgreMain
-      glslang::glslang glslang::HLSL glslang::OSDependent glslang::OGLCompiler glslang::SPIRV spirv-tools::SPIRV-Tools spirv-tools::SPIRV-Tools-opt)
+      glslang::glslang glslang::HLSL glslang::OSDependent glslang::OGLCompiler glslang::SPIRV SPIRV-Tools-static SPIRV-Tools-opt)
 endif()
 
 ogre_config_framework(Plugin_GLSLangProgramManager)
diff --git a/Tests/CMakeLists.txt b/Tests/CMakeLists.txt
index c0653fbcf..11da11077 100644
--- a/Tests/CMakeLists.txt
+++ b/Tests/CMakeLists.txt
@@ -10,7 +10,7 @@
 # Configure Tests build
 if (OGRE_BUILD_TESTS)
 
-  if(NOT EXISTS ${PROJECT_BINARY_DIR}/googletest-1.11.0)
+  if(FALSE)
     message(STATUS "Building gtest")
     file(DOWNLOAD
         https://github.com/google/googletest/archive/refs/tags/release-1.11.0.tar.gz
diff --git a/Tools/AssimpConverter/CMakeLists.txt b/Tools/AssimpConverter/CMakeLists.txt
index 58c996f7e..16b7843c6 100644
--- a/Tools/AssimpConverter/CMakeLists.txt
+++ b/Tools/AssimpConverter/CMakeLists.txt
@@ -13,6 +13,3 @@ if (OGRE_PROJECT_FOLDERS)
 	set_property(TARGET OgreAssimpConverter PROPERTY FOLDER Tools)
 endif ()
 ogre_config_tool(OgreAssimpConverter)
-
-set_property(TARGET OgreAssimpConverter PROPERTY
-	INSTALL_RPATH "$ORIGIN/../${OGRE_PLUGINS_PATH}")
\ No newline at end of file
-- 
2.30.2

