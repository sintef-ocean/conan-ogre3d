From 47930e1ce83a4861f7323fa4af976cacf9a55999 Mon Sep 17 00:00:00 2001
From: Joakim Haugen <joakim.haugen@sintef.no>
Date: Mon, 31 Oct 2022 13:29:47 +0100
Subject: [PATCH 3/6] Do fixes to support Real as float and double

---
 OgreMain/src/OgreLight.cpp             |  3 ++-
 Tests/OgreMain/src/General.cpp         | 22 +++++++++++++++++++---
 Tests/OgreMain/src/QuaternionTests.cpp |  2 +-
 3 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/OgreMain/src/OgreLight.cpp b/OgreMain/src/OgreLight.cpp
index 9262137ad..2fa034bf8 100644
--- a/OgreMain/src/OgreLight.cpp
+++ b/OgreMain/src/OgreLight.cpp
@@ -592,7 +592,8 @@ namespace Ogre {
         }
         void applyDeltaValue(const Vector4& val) override
         {
-            setValue(mLight->getAttenuation() + val);
+            const auto& attenuation = mLight->getAttenuation();
+            setValue(Vector4(attenuation[0], attenuation[1], attenuation[2], attenuation[3]) + val);
         }
         void setCurrentStateAsBaseValue(void) override
         {
diff --git a/Tests/OgreMain/src/General.cpp b/Tests/OgreMain/src/General.cpp
index 3655a53ae..f961d730c 100644
--- a/Tests/OgreMain/src/General.cpp
+++ b/Tests/OgreMain/src/General.cpp
@@ -65,9 +65,25 @@ TEST_F(CameraTests,customProjectionMatrix)
     RealRect extents = cam.getFrustumExtents();
     cam.setCustomProjectionMatrix(true, cam.getProjectionMatrix());
     for(int j = 0; j < 8; j++)
-        EXPECT_EQ(corners[j], cam.getWorldSpaceCorners()[j]);
-
-    EXPECT_EQ(extents, cam.getFrustumExtents());
+      for(int k = 0; k < 3; k++) {
+        if(typeid(corners[j]) == typeid(float))
+          EXPECT_FLOAT_EQ(corners[j][k], cam.getWorldSpaceCorners()[j][k]);
+        else
+          EXPECT_DOUBLE_EQ(corners[j][k], cam.getWorldSpaceCorners()[j][k]);
+      }
+
+
+    if(typeid(Ogre::Real) == typeid(float)) {
+      EXPECT_FLOAT_EQ(extents.bottom, cam.getFrustumExtents().bottom);
+      EXPECT_FLOAT_EQ(extents.top, cam.getFrustumExtents().top);
+      EXPECT_FLOAT_EQ(extents.left, cam.getFrustumExtents().left);
+      EXPECT_FLOAT_EQ(extents.right, cam.getFrustumExtents().right);
+    } else {
+      EXPECT_DOUBLE_EQ(extents.bottom, cam.getFrustumExtents().bottom);
+      EXPECT_DOUBLE_EQ(extents.top, cam.getFrustumExtents().top);
+      EXPECT_DOUBLE_EQ(extents.left, cam.getFrustumExtents().left);
+      EXPECT_DOUBLE_EQ(extents.right, cam.getFrustumExtents().right);
+    }
 }
 
 TEST(Root,shutdown)
diff --git a/Tests/OgreMain/src/QuaternionTests.cpp b/Tests/OgreMain/src/QuaternionTests.cpp
index ec07a2f23..81af968ac 100644
--- a/Tests/OgreMain/src/QuaternionTests.cpp
+++ b/Tests/OgreMain/src/QuaternionTests.cpp
@@ -33,7 +33,7 @@ using namespace Ogre;
 
 TEST(QuaternionTests,Norm)
 {
-    EXPECT_EQ(Quaternion(0, 2, 2, 2).Norm(), Vector3(2, 2, 2).length());
+    EXPECT_NEAR(Quaternion(0, 2, 2, 2).Norm(), Vector3(2, 2, 2).length(), 1e-6);
 }
 
 TEST(QuaternionTests,FromVectors)
-- 
2.30.2

