---
name: Linux GCC

on: [push, workflow_dispatch]

env:
  CONAN_UPLOAD: ${{ secrets.CONAN_URL }}
  CONAN_PASSWORD_SINTEF: ${{ secrets.CONAN_PASSWORD }}
  CONAN_LOGIN_USERNAME_SINTEF: ${{ secrets.CONAN_USER }}
  CONFIG_URL: https://github.com/sintef-ocean/conan-configs.git

jobs:
  conan-with-gcc:
    name: Conan
    runs-on: ubuntu-22.04
    env:
      PKG_REFERENCE: >-
        ${{ matrix.conan == '1.0' &&
        format('{0}@{1}/{2}', matrix.version, 'sintef', matrix.channel) ||
        format('--version {0} --user {1} --channel {2}', matrix.version, 'sintef', matrix.channel) }}
      UPLOAD_FLAGS: "${{ matrix.conan == '1.0' && '--all' || '' }}"
      cppstd: "${{ matrix.compiler_version < 11 && 'gnu14' || 'gnu17' }}"
    strategy:
      fail-fast: false
      matrix:
        conan: ["2.0"]
        version: [13.5.0, 13.6.5]
        configs: ["default", "fhsim"]
        build_type: [Debug, Release]
        profile: [gcc]
        compiler_version: [8, 9, 10, 11, 12]
        channel: ["${{ (github.head_ref || github.ref_name) == 'master' && 'stable' || 'testing' }}"]
    container:
      image: conanio/gcc${{ matrix.compiler_version }}-ubuntu18.04
      options: -u 0
    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          pip3 install --upgrade setuptools pip
          pip3 install --upgrade conan~=${{ matrix.conan }}
      - name: Configure Conan
        run: conan remote add sintef ${{ env.CONAN_UPLOAD }}
      - name: Get package name Conan 1
        if: matrix.conan == '1.0'
        run: echo "pkg_name=$(conan inspect --raw name .)" >> $GITHUB_ENV
      - name: Get package name Conan 2
        if: matrix.conan == '2.0'
        run: echo "pkg_name=$(conan inspect -f json . | jq .name -r)" >> $GITHUB_ENV
      - name: Conan create
        run: |
          git config --global --add safe.directory '*'
          conan config install ${{ env.CONFIG_URL }}  --type git -sf conan${{ matrix.conan }}
          conan config install ${{ env.CONFIG_URL }}  --type git -sf profiles -tf profiles
          conan create -s build_type=${{ matrix.build_type }} \
            -s compiler.version=${{ matrix.compiler_version }} \
            -s compiler.cppstd=${{ env.cppstd }} \
            -pr:b=${{ matrix.profile }} -pr:h=${{ matrix.profile }} \
            -o ${{ env.pkg_name }}/*:with_sdl=${{ matrix.configs == 'fhsim' && 'False' || 'True' }} \
            -o ${{ env.pkg_name }}/*:plugin_glslang=${{ matrix.configs == 'fhsim' && 'False' || 'True' }} \
            -o ${{ env.pkg_name }}/*:component_bullet=${{ matrix.configs == 'fhsim' && 'False' || 'True' }} \
            -b missing -b outdated -b ${{ env.pkg_name }}* . ${{ env.PKG_REFERENCE }}
      - name: Conan upload
        run: conan upload --confirm -r sintef ${{ env.pkg_name }}* --force ${{ env.UPLOAD_FLAGS }}
