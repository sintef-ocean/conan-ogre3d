---
name: Linux GCC

on: [push, workflow_dispatch]

env:
  CONAN_UPLOAD: ${{ secrets.CONAN_URL }}
  CONAN_PASSWORD_SINTEF: ${{ secrets.CONAN_PASSWORD }}
  CONAN_LOGIN_USERNAME_SINTEF: ${{ secrets.CONAN_USER }}
  CONFIG_URL: https://github.com/sintef-ocean/conan-configs.git
  DEBIAN_FRONTEND: noninteractive
  TZ: Etc/UTC
jobs:
  conan-with-gcc:
    name: Conan
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        version: [14.3.4, 14.4.1]
        configs: ["default", "fhsim"]
        build_type: [Debug, Release]
        profile: [gcc]
        compiler_version: [11, 12, 13, 14]
        channel: ["${{ (github.head_ref || github.ref_name) == 'master' && 'stable' || 'testing' }}"]
        include:
          - linux: debian:latest
          -
            linux: debian:trixie
            compiler_version: 14
          -
            linux: ubuntu:24.04
            compiler_version: 13
          -
            linux: debian:bookworm
            compiler_version: 12
          -
            linux: ubuntu:22.04
            compiler_version: 11
    container:
      image: ${{ matrix.linux }}
      options: -u 0
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install -y jq build-essential pipx cmake git pkg-config
          pipx install conan
          echo "/github/home/.local/bin" >> $GITHUB_PATH
      - name: Configure Conan
        run: |
          conan remote add sintef ${{ env.CONAN_UPLOAD }}
          echo "pkg_name=$(conan inspect -f json . | jq .name -r)" >> $GITHUB_ENV
          git config --global --add safe.directory '*'
          conan config install ${{ env.CONFIG_URL }}  --type git -sf conan2.0
          conan config install ${{ env.CONFIG_URL }}  --type git -sf profiles -tf profiles
      - name: Conan create
        run: |
          conan create -s build_type=${{ matrix.build_type }} \
            -s compiler.version=${{ matrix.compiler_version }} \
            -pr:b=${{ matrix.profile }} -pr:h=${{ matrix.profile }} \
            -o ${{ env.pkg_name }}/*:with_sdl=${{ matrix.configs == 'fhsim' && 'False' || 'True' }} \
            -o ${{ env.pkg_name }}/*:plugin_glslang=${{ matrix.configs == 'fhsim' && 'False' || 'True' }} \
            -o ${{ env.pkg_name }}/*:component_bullet=${{ matrix.configs == 'fhsim' && 'False' || 'True' }} \
            -b missing -b outdated -b '${{ env.pkg_name }}*' \
            --version ${{ matrix.version }} --user sintef --channel ${{ matrix.channel }} \
            .
      - name: Conan upload
        run: conan upload --confirm -r sintef '${{ env.pkg_name }}*' --force
